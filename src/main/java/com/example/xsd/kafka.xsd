<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns="http://www.example.com/schema/test"
            targetNamespace="http://www.example.com/schema/test"
            elementFormDefault="qualified" attributeFormDefault="unqualified">
    <xsd:import namespace="http://www.springframework.org/schema/beans"/>


    <xsd:simpleType name="carType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="AUDO"/>
            <xsd:enumeration value="BMW"/>
            <xsd:enumeration value="QQ"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:element name="autoA6" type="carType"/>

    <xsd:element name="address">
        <xsd:simpleType>
            <xsd:restriction base="xsd:string">
                <xsd:whiteSpace value="collapse"/>
                <!--
                    1. preserve XML 处理器不会移除任何空白字符
                    2. replace  XML 处理器将移除所有空白字符（换行、回车、空格以及制表符）
                    3. collapse XML 处理器将移除所有空白字符（换行、回车、空格以及制表符会被替换为空格，开头和结尾的空格会被移除，而多个连续的空格会被缩减为一个单一的空格）
                -->
            </xsd:restriction>
        </xsd:simpleType>
    </xsd:element>

    <!--

        限定	                描述
        enumeration	        定义可接受值的一个列表
        fractionDigits	    定义所允许的最大的小数位数。必须大于等于0。
        length	            定义所允许的字符或者列表项目的精确数目。必须大于或等于0。
        maxExclusive	    定义数值的上限。所允许的值必须小于此值。
        maxInclusive	    定义数值的上限。所允许的值必须小于或等于此值。
        maxLength	        定义所允许的字符或者列表项目的最大数目。必须大于或等于0。
        minExclusive    	定义数值的下限。所允许的值必需大于此值。
        minInclusive	    定义数值的下限。所允许的值必需大于或等于此值。
        minLength	        定义所允许的字符或者列表项目的最小数目。必须大于或等于0。
        pattern	            定义可接受的字符的精确序列。
        totalDigits	        定义所允许的阿拉伯数字的精确位数。必须大于0。
        whiteSpace	        定义空白字符（换行、回车、空格以及制表符）的处理方式。
    -->

    <xsd:element name="employee" type="fullpersoninfo"/>

    <xsd:complexType name="personinfo">
        <xsd:sequence>
            <xsd:element name="firstname" type="xsd:string"/>
            <xsd:element name="lastname" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="fullpersoninfo">
        <xsd:complexContent>
            <xsd:extension base="personinfo">
                <xsd:sequence>
                    <xsd:element name="address" type="xsd:string"/>
                    <xsd:element name="city" type="xsd:string"/>
                    <xsd:element name="country" type="xsd:string"/>
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
</xsd:schema>